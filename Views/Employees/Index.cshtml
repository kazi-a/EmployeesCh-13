@using EmployeesCh12.Models
@model PaginatedList<EmployeesCh12.Models.Employee>

@{
    ViewData["Title"] = "Index";
}

<h1>Index</h1>

<p>
    <a asp-action="Create">Create New</a>
</p>

<form asp-action="Index" method="get">
    <div class="form-actions no-color">
        <p>
            Find by name:
            <input type="text" name="searchString" value="@ViewData["CurrentFilter"]" />
            <input type="submit" value="Search" class="btn btn-default" />
            | <a asp-action="Index">Back to Full List</a>
        </p>
    </div>
</form>
<table class="table">
    <thead>
        <tr>
            <th>@Html.DisplayName("First Name")</th>

            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["NameSortParm"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">Last Name
                    @if (ViewData["NameSortParm"] != null && ViewData["NameSortParm"].ToString() == "name_desc")
                    {
                        <span>&#9660;</span> <!--🔽-->
                    }
                    else
                    {
                        <span>&#9650;</span> <!--🔼-->
                    }
                </a>
            </th>

            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["DateSortParm"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">
                    Hire Date
                    @if (ViewData["DateSortParm"] != null && ViewData["DateSortParm"].ToString() == "date_desc")
                    {
                        <span>&#9660;</span> <!--🔽-->
                    }
                    else
                    {
                        <span>&#9650;</span> <!--🔼-->
                    }
                </a>
            </th>

            <th>@Html.DisplayName("Department")</th>
            <th>@Html.DisplayName("Category")</th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>@Html.DisplayFor(modelItem => item.FirstName)</td>
                <td>@Html.DisplayFor(modelItem => item.LastName)</td>
                <td>@Html.DisplayFor(modelItem => item.HireDate)</td>
                <td>@Html.DisplayFor(modelItem => item.Department.Name)</td>
                <td>@Html.DisplayFor(modelItem => item.Benefits.Category)</td>
                <td>
                    <a asp-action="Edit" asp-route-id="@item.ID">Edit</a> |
                    <a asp-action="Details" asp-route-id="@item.ID">Details</a> |
                    <a asp-action="Delete" asp-route-id="@item.ID">Delete</a>
                </td>
            </tr>
        }
    </tbody>
</table>

@{
    var prevDisabled = Model.HasPreviousPage ? "" : "disabled";
    var nextDisabled = Model.HasNextPage ? "" : "disabled";
}

<div>
    <a asp-action="Index" asp-route-sortOrder="@ViewData["CurrentSort"]" asp-route-pageNumber="@(Model.PageIndex - 1)" asp-route-currentFilter="@ViewData["CurrentFilter"]" class="btn btn-default @prevDisabled">Previous</a>
    <a asp-action="Index" asp-route-sortOrder="@ViewData["CurrentSort"]" asp-route-pageNumber="@(Model.PageIndex + 1)" asp-route-currentFilter="@ViewData["CurrentFilter"]" class="btn btn-default @nextDisabled">Next</a>
</div>
